// <auto-generated />
using System;
using DeviceContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MacSave.Migrations
{
    [DbContext(typeof(DeviceDb))]
    [Migration("20240601125507_ProblemFormatt")]
    partial class ProblemFormatt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("DeviceModel.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("RemoteAcess")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("MacToDatabaseModel.MacToDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("RemoteAccess")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MacstoDbs");
                });

            modelBuilder.Entity("Model.ProblemTreatWrapper.ProblemTreatWrapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MacToDatabaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("MacToDatabaseId");

                    b.ToTable("ProblemTreatWrapper");
                });

            modelBuilder.Entity("Models.UsedAtWrapper.UsedAtWrapper.UsedAtWrapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("UsedAtWrapper");
                });

            modelBuilder.Entity("ModelsFileToUpload.FileToUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FilesUploads");
                });

            modelBuilder.Entity("Model.ProblemTreatWrapper.ProblemTreatWrapper", b =>
                {
                    b.HasOne("DeviceModel.Device", null)
                        .WithMany("Problem")
                        .HasForeignKey("DeviceId");

                    b.HasOne("MacToDatabaseModel.MacToDatabase", null)
                        .WithMany("Problems")
                        .HasForeignKey("MacToDatabaseId");
                });

            modelBuilder.Entity("Models.UsedAtWrapper.UsedAtWrapper.UsedAtWrapper", b =>
                {
                    b.HasOne("DeviceModel.Device", null)
                        .WithMany("UsedAtWrapper")
                        .HasForeignKey("DeviceId");
                });

            modelBuilder.Entity("DeviceModel.Device", b =>
                {
                    b.Navigation("Problem");

                    b.Navigation("UsedAtWrapper");
                });

            modelBuilder.Entity("MacToDatabaseModel.MacToDatabase", b =>
                {
                    b.Navigation("Problems");
                });
#pragma warning restore 612, 618
        }
    }
}
